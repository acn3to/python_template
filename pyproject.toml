[tool.poetry]
name = "python_template"
version = "0.1.0"
description = "Python project template with best practices"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "python_template", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
ruff = "^0.3.4"
mypy = "^1.8.0"
pre-commit = "^3.5.0"
bandit = "^1.7.6"
safety = "^2.3.5"
hypothesis = "^6.82.0"
tox = "^4.11.0"
mkdocs = "^1.5.2"
mkdocs-material = "^9.2.0"

[tool.poetry.extras]
dev = [
    "pytest",
    "pytest-cov",
    "ruff",
    "mypy",
    "pre-commit",
    "bandit",
    "safety",
    "hypothesis",
    "tox",
    "mkdocs",
    "mkdocs-material"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 88
lint.select = ["E", "F", "B", "I"]
lint.ignore = []

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=src"

[tool.bandit]
exclude_dirs = ["tests", ".venv"]
skips = ["B101"]
